{"version":3,"sources":["../node_modules/svg-country-flags/svg sync /^/.*/.svg$","lib/locationData.js","lib/helpers.js","components/Location/Location.js","components/Scoreboard/Scoreboard.js","components/MainMenu/MainMenu.js","components/Timer/Timer.js","components/Toggle/Toggle.js","components/Dropdown/Dropdown.js","App.js","serviceWorker.js","index.js"],"names":["map","./ad.svg","./ae.svg","./af.svg","./ag.svg","./ai.svg","./al.svg","./am.svg","./an.svg","./ao.svg","./aq.svg","./ar.svg","./as.svg","./at.svg","./au.svg","./aw.svg","./ax.svg","./az.svg","./ba.svg","./bb.svg","./bd.svg","./be.svg","./bf.svg","./bg.svg","./bh.svg","./bi.svg","./bj.svg","./bl.svg","./bm.svg","./bn.svg","./bo.svg","./bq.svg","./br.svg","./bs.svg","./bt.svg","./bv.svg","./bw.svg","./by.svg","./bz.svg","./ca.svg","./cc.svg","./cd.svg","./cf.svg","./cg.svg","./ch.svg","./ci.svg","./ck.svg","./cl.svg","./cm.svg","./cn.svg","./co.svg","./cr.svg","./cu.svg","./cv.svg","./cw.svg","./cx.svg","./cy.svg","./cz.svg","./de.svg","./dj.svg","./dk.svg","./dm.svg","./do.svg","./dz.svg","./ec.svg","./ee.svg","./eg.svg","./eh.svg","./er.svg","./es.svg","./et.svg","./eu.svg","./fi.svg","./fj.svg","./fk.svg","./fm.svg","./fo.svg","./fr.svg","./ga.svg","./gb-eng.svg","./gb-nir.svg","./gb-sct.svg","./gb-wls.svg","./gb.svg","./gd.svg","./ge.svg","./gf.svg","./gg.svg","./gh.svg","./gi.svg","./gl.svg","./gm.svg","./gn.svg","./gp.svg","./gq.svg","./gr.svg","./gs.svg","./gt.svg","./gu.svg","./gw.svg","./gy.svg","./hk.svg","./hm.svg","./hn.svg","./hr.svg","./ht.svg","./hu.svg","./id.svg","./ie.svg","./il.svg","./im.svg","./in.svg","./io.svg","./iq.svg","./ir.svg","./is.svg","./it.svg","./je.svg","./jm.svg","./jo.svg","./jp.svg","./ke.svg","./kg.svg","./kh.svg","./ki.svg","./km.svg","./kn.svg","./kp.svg","./kr.svg","./kw.svg","./ky.svg","./kz.svg","./la.svg","./lb.svg","./lc.svg","./li.svg","./lk.svg","./lr.svg","./ls.svg","./lt.svg","./lu.svg","./lv.svg","./ly.svg","./ma.svg","./mc.svg","./md.svg","./me.svg","./mf.svg","./mg.svg","./mh.svg","./mk.svg","./ml.svg","./mm.svg","./mn.svg","./mo.svg","./mp.svg","./mq.svg","./mr.svg","./ms.svg","./mt.svg","./mu.svg","./mv.svg","./mw.svg","./mx.svg","./my.svg","./mz.svg","./na.svg","./nc.svg","./ne.svg","./nf.svg","./ng.svg","./ni.svg","./nl.svg","./no.svg","./np.svg","./nr.svg","./nu.svg","./nz.svg","./om.svg","./pa.svg","./pe.svg","./pf.svg","./pg.svg","./ph.svg","./pk.svg","./pl.svg","./pm.svg","./pn.svg","./pr.svg","./ps.svg","./pt.svg","./pw.svg","./py.svg","./qa.svg","./re.svg","./ro.svg","./rs.svg","./ru.svg","./rw.svg","./sa.svg","./sb.svg","./sc.svg","./sd.svg","./se.svg","./sg.svg","./sh.svg","./si.svg","./sj.svg","./sk.svg","./sl.svg","./sm.svg","./sn.svg","./so.svg","./sr.svg","./ss.svg","./st.svg","./sv.svg","./sx.svg","./sy.svg","./sz.svg","./tc.svg","./td.svg","./tf.svg","./tg.svg","./th.svg","./tj.svg","./tk.svg","./tl.svg","./tm.svg","./tn.svg","./to.svg","./tr.svg","./tt.svg","./tv.svg","./tw.svg","./tz.svg","./ua.svg","./ug.svg","./um.svg","./us.svg","./uy.svg","./uz.svg","./va.svg","./vc.svg","./ve.svg","./vg.svg","./vi.svg","./vn.svg","./vu.svg","./wf.svg","./ws.svg","./xk.svg","./ye.svg","./yt.svg","./za.svg","./zm.svg","./zw.svg","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","regions","locationData","countryName","capital","lat","lng","countryCode","continent","distanceBetween","a","b","lat1","lng1","lat2","lng2","dLat","Math","PI","dLon","d","cos","floor","R","asin","sqrt","randomBetween","min","max","ceil","random","numberWithCommas","num","toLocaleString","maximumSignificantDigits","Location","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClick","type","setState","prevState","selected","returnGuessToApp","assertThisInitialized","state","correct","distance","location","showDistance","nextProps","className","dist","distanceDisplayType","i","round","react_default","createElement","concat","require","toLowerCase","_this$props$location","getAnswerStatusClass","showFlags","src","getFlagURL","alt","renderDistance","Component","Scoreboard","_this$props","wrong","MainMenu","currentMenu","menu","activeRegion","onMenuChange","onSaveSettings","val","_this2","changeMenu","components_Toggle_Toggle","label","initial","onToggle","handleDistanceType","activeLabel","inactiveLabel","handleFlagToggle","components_Dropdown_Dropdown","onChange","handleRegionChange","opts","saveSettings","Timer","tick","running","ticker","finished","clearInterval","timer","onFinish","updateProgress","startTimer","setInterval","stopTimer","resetTimer","duration","ratio","progress","parseInt","classes","style","width","classNames","Toggle","toggle","newVal","Fragment","active","inactive","Dropdown","handleChange","target","value","defaultValue","item","key","App","nextGame","locationStart","getRandomLocation","locationA","locationB","start","answerA","answerB","answerHasBeenSelected","timeUp","updateAppState","guess","checkAnswer","correctAnswers","wrongAnswers","totalAnswers","regionCache","nextState","startGame","setTimeout","_childTimer","_this3","length","index","filteredLocations","filter","correctAnswer","_this$state","newState","_this4","_this$state2","components_MainMenu_MainMenu","s","handleSaveSettings","_this$state3","components_Scoreboard_Scoreboard","total","components_Location_Location","data","components_Timer_Timer","ref","child","onTimerFinish","maxWidth","margin","padding","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b261309a.chunk.js","sourcesContent":["var map = {\n\t\"./ad.svg\": 22,\n\t\"./ae.svg\": 23,\n\t\"./af.svg\": 24,\n\t\"./ag.svg\": 25,\n\t\"./ai.svg\": 26,\n\t\"./al.svg\": 27,\n\t\"./am.svg\": 28,\n\t\"./an.svg\": 29,\n\t\"./ao.svg\": 30,\n\t\"./aq.svg\": 31,\n\t\"./ar.svg\": 32,\n\t\"./as.svg\": 33,\n\t\"./at.svg\": 34,\n\t\"./au.svg\": 35,\n\t\"./aw.svg\": 36,\n\t\"./ax.svg\": 37,\n\t\"./az.svg\": 38,\n\t\"./ba.svg\": 39,\n\t\"./bb.svg\": 40,\n\t\"./bd.svg\": 41,\n\t\"./be.svg\": 42,\n\t\"./bf.svg\": 43,\n\t\"./bg.svg\": 44,\n\t\"./bh.svg\": 45,\n\t\"./bi.svg\": 46,\n\t\"./bj.svg\": 47,\n\t\"./bl.svg\": 48,\n\t\"./bm.svg\": 49,\n\t\"./bn.svg\": 50,\n\t\"./bo.svg\": 51,\n\t\"./bq.svg\": 52,\n\t\"./br.svg\": 53,\n\t\"./bs.svg\": 54,\n\t\"./bt.svg\": 55,\n\t\"./bv.svg\": 56,\n\t\"./bw.svg\": 57,\n\t\"./by.svg\": 58,\n\t\"./bz.svg\": 59,\n\t\"./ca.svg\": 60,\n\t\"./cc.svg\": 61,\n\t\"./cd.svg\": 62,\n\t\"./cf.svg\": 63,\n\t\"./cg.svg\": 64,\n\t\"./ch.svg\": 65,\n\t\"./ci.svg\": 66,\n\t\"./ck.svg\": 67,\n\t\"./cl.svg\": 68,\n\t\"./cm.svg\": 69,\n\t\"./cn.svg\": 70,\n\t\"./co.svg\": 71,\n\t\"./cr.svg\": 72,\n\t\"./cu.svg\": 73,\n\t\"./cv.svg\": 74,\n\t\"./cw.svg\": 75,\n\t\"./cx.svg\": 76,\n\t\"./cy.svg\": 77,\n\t\"./cz.svg\": 78,\n\t\"./de.svg\": 79,\n\t\"./dj.svg\": 80,\n\t\"./dk.svg\": 81,\n\t\"./dm.svg\": 82,\n\t\"./do.svg\": 83,\n\t\"./dz.svg\": 84,\n\t\"./ec.svg\": 85,\n\t\"./ee.svg\": 86,\n\t\"./eg.svg\": 87,\n\t\"./eh.svg\": 88,\n\t\"./er.svg\": 89,\n\t\"./es.svg\": 90,\n\t\"./et.svg\": 91,\n\t\"./eu.svg\": 92,\n\t\"./fi.svg\": 93,\n\t\"./fj.svg\": 94,\n\t\"./fk.svg\": 95,\n\t\"./fm.svg\": 96,\n\t\"./fo.svg\": 97,\n\t\"./fr.svg\": 98,\n\t\"./ga.svg\": 99,\n\t\"./gb-eng.svg\": 100,\n\t\"./gb-nir.svg\": 101,\n\t\"./gb-sct.svg\": 102,\n\t\"./gb-wls.svg\": 103,\n\t\"./gb.svg\": 104,\n\t\"./gd.svg\": 105,\n\t\"./ge.svg\": 106,\n\t\"./gf.svg\": 107,\n\t\"./gg.svg\": 108,\n\t\"./gh.svg\": 109,\n\t\"./gi.svg\": 110,\n\t\"./gl.svg\": 111,\n\t\"./gm.svg\": 112,\n\t\"./gn.svg\": 113,\n\t\"./gp.svg\": 114,\n\t\"./gq.svg\": 115,\n\t\"./gr.svg\": 116,\n\t\"./gs.svg\": 117,\n\t\"./gt.svg\": 118,\n\t\"./gu.svg\": 119,\n\t\"./gw.svg\": 120,\n\t\"./gy.svg\": 121,\n\t\"./hk.svg\": 122,\n\t\"./hm.svg\": 123,\n\t\"./hn.svg\": 124,\n\t\"./hr.svg\": 125,\n\t\"./ht.svg\": 126,\n\t\"./hu.svg\": 127,\n\t\"./id.svg\": 128,\n\t\"./ie.svg\": 129,\n\t\"./il.svg\": 130,\n\t\"./im.svg\": 131,\n\t\"./in.svg\": 132,\n\t\"./io.svg\": 133,\n\t\"./iq.svg\": 134,\n\t\"./ir.svg\": 135,\n\t\"./is.svg\": 136,\n\t\"./it.svg\": 137,\n\t\"./je.svg\": 138,\n\t\"./jm.svg\": 139,\n\t\"./jo.svg\": 140,\n\t\"./jp.svg\": 141,\n\t\"./ke.svg\": 142,\n\t\"./kg.svg\": 143,\n\t\"./kh.svg\": 144,\n\t\"./ki.svg\": 145,\n\t\"./km.svg\": 146,\n\t\"./kn.svg\": 147,\n\t\"./kp.svg\": 148,\n\t\"./kr.svg\": 149,\n\t\"./kw.svg\": 150,\n\t\"./ky.svg\": 151,\n\t\"./kz.svg\": 152,\n\t\"./la.svg\": 153,\n\t\"./lb.svg\": 154,\n\t\"./lc.svg\": 155,\n\t\"./li.svg\": 156,\n\t\"./lk.svg\": 157,\n\t\"./lr.svg\": 158,\n\t\"./ls.svg\": 159,\n\t\"./lt.svg\": 160,\n\t\"./lu.svg\": 161,\n\t\"./lv.svg\": 162,\n\t\"./ly.svg\": 163,\n\t\"./ma.svg\": 164,\n\t\"./mc.svg\": 165,\n\t\"./md.svg\": 166,\n\t\"./me.svg\": 167,\n\t\"./mf.svg\": 168,\n\t\"./mg.svg\": 169,\n\t\"./mh.svg\": 170,\n\t\"./mk.svg\": 171,\n\t\"./ml.svg\": 172,\n\t\"./mm.svg\": 173,\n\t\"./mn.svg\": 174,\n\t\"./mo.svg\": 175,\n\t\"./mp.svg\": 176,\n\t\"./mq.svg\": 177,\n\t\"./mr.svg\": 178,\n\t\"./ms.svg\": 179,\n\t\"./mt.svg\": 180,\n\t\"./mu.svg\": 181,\n\t\"./mv.svg\": 182,\n\t\"./mw.svg\": 183,\n\t\"./mx.svg\": 184,\n\t\"./my.svg\": 185,\n\t\"./mz.svg\": 186,\n\t\"./na.svg\": 187,\n\t\"./nc.svg\": 188,\n\t\"./ne.svg\": 189,\n\t\"./nf.svg\": 190,\n\t\"./ng.svg\": 191,\n\t\"./ni.svg\": 192,\n\t\"./nl.svg\": 193,\n\t\"./no.svg\": 194,\n\t\"./np.svg\": 195,\n\t\"./nr.svg\": 196,\n\t\"./nu.svg\": 197,\n\t\"./nz.svg\": 198,\n\t\"./om.svg\": 199,\n\t\"./pa.svg\": 200,\n\t\"./pe.svg\": 201,\n\t\"./pf.svg\": 202,\n\t\"./pg.svg\": 203,\n\t\"./ph.svg\": 204,\n\t\"./pk.svg\": 205,\n\t\"./pl.svg\": 206,\n\t\"./pm.svg\": 207,\n\t\"./pn.svg\": 208,\n\t\"./pr.svg\": 209,\n\t\"./ps.svg\": 210,\n\t\"./pt.svg\": 211,\n\t\"./pw.svg\": 212,\n\t\"./py.svg\": 213,\n\t\"./qa.svg\": 214,\n\t\"./re.svg\": 215,\n\t\"./ro.svg\": 216,\n\t\"./rs.svg\": 217,\n\t\"./ru.svg\": 218,\n\t\"./rw.svg\": 219,\n\t\"./sa.svg\": 220,\n\t\"./sb.svg\": 221,\n\t\"./sc.svg\": 222,\n\t\"./sd.svg\": 223,\n\t\"./se.svg\": 224,\n\t\"./sg.svg\": 225,\n\t\"./sh.svg\": 226,\n\t\"./si.svg\": 227,\n\t\"./sj.svg\": 228,\n\t\"./sk.svg\": 229,\n\t\"./sl.svg\": 230,\n\t\"./sm.svg\": 231,\n\t\"./sn.svg\": 232,\n\t\"./so.svg\": 233,\n\t\"./sr.svg\": 234,\n\t\"./ss.svg\": 235,\n\t\"./st.svg\": 236,\n\t\"./sv.svg\": 237,\n\t\"./sx.svg\": 238,\n\t\"./sy.svg\": 239,\n\t\"./sz.svg\": 240,\n\t\"./tc.svg\": 241,\n\t\"./td.svg\": 242,\n\t\"./tf.svg\": 243,\n\t\"./tg.svg\": 244,\n\t\"./th.svg\": 245,\n\t\"./tj.svg\": 246,\n\t\"./tk.svg\": 247,\n\t\"./tl.svg\": 248,\n\t\"./tm.svg\": 249,\n\t\"./tn.svg\": 250,\n\t\"./to.svg\": 251,\n\t\"./tr.svg\": 252,\n\t\"./tt.svg\": 253,\n\t\"./tv.svg\": 254,\n\t\"./tw.svg\": 255,\n\t\"./tz.svg\": 256,\n\t\"./ua.svg\": 257,\n\t\"./ug.svg\": 258,\n\t\"./um.svg\": 259,\n\t\"./us.svg\": 260,\n\t\"./uy.svg\": 261,\n\t\"./uz.svg\": 262,\n\t\"./va.svg\": 263,\n\t\"./vc.svg\": 264,\n\t\"./ve.svg\": 265,\n\t\"./vg.svg\": 266,\n\t\"./vi.svg\": 267,\n\t\"./vn.svg\": 268,\n\t\"./vu.svg\": 269,\n\t\"./wf.svg\": 270,\n\t\"./ws.svg\": 271,\n\t\"./xk.svg\": 272,\n\t\"./ye.svg\": 273,\n\t\"./yt.svg\": 274,\n\t\"./za.svg\": 275,\n\t\"./zm.svg\": 276,\n\t\"./zw.svg\": 277\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 21;","export const regions = [\"All\", \"Africa\", \"Asia\", \"Australia\", \"Central America\", \"Europe\", \"North America\", \"South America\"]\r\n\r\nexport const locationData = [\r\n  {\r\n    \"countryName\": \"Afghanistan\",\r\n    \"capital\": \"Kabul\",\r\n    \"lat\": \"34.51666667\",\r\n    \"lng\": \"69.183333\",\r\n    \"countryCode\": \"AF\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Aland Islands\",\r\n    \"capital\": \"Mariehamn\",\r\n    \"lat\": \"60.116667\",\r\n    \"lng\": \"19.9\",\r\n    \"countryCode\": \"AX\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Albania\",\r\n    \"capital\": \"Tirana\",\r\n    \"lat\": \"41.31666667\",\r\n    \"lng\": \"19.816667\",\r\n    \"countryCode\": \"AL\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Algeria\",\r\n    \"capital\": \"Algiers\",\r\n    \"lat\": \"36.75\",\r\n    \"lng\": \"3.05\",\r\n    \"countryCode\": \"DZ\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"American Samoa\",\r\n    \"capital\": \"Pago Pago\",\r\n    \"lat\": \"-14.26666667\",\r\n    \"lng\": \"-170.7\",\r\n    \"countryCode\": \"AS\",\r\n    \"continent\": \"Australia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Andorra\",\r\n    \"capital\": \"Andorra la Vella\",\r\n    \"lat\": \"42.5\",\r\n    \"lng\": \"1.516667\",\r\n    \"countryCode\": \"AD\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Angola\",\r\n    \"capital\": \"Luanda\",\r\n    \"lat\": \"-8.833333333\",\r\n    \"lng\": \"13.216667\",\r\n    \"countryCode\": \"AO\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Anguilla\",\r\n    \"capital\": \"The Valley\",\r\n    \"lat\": \"18.21666667\",\r\n    \"lng\": \"-63.05\",\r\n    \"countryCode\": \"AI\",\r\n    \"continent\": \"North America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Antarctica\",\r\n    \"capital\": \"N/A\",\r\n    \"lat\": \"0\",\r\n    \"lng\": \"0\",\r\n    \"countryCode\": \"AQ\",\r\n    \"continent\": \"Antarctica\"\r\n  },\r\n  {\r\n    \"countryName\": \"Antigua and Barbuda\",\r\n    \"capital\": \"Saint John’s\",\r\n    \"lat\": \"17.11666667\",\r\n    \"lng\": \"-61.85\",\r\n    \"countryCode\": \"AG\",\r\n    \"continent\": \"North America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Argentina\",\r\n    \"capital\": \"Buenos Aires\",\r\n    \"lat\": \"-34.58333333\",\r\n    \"lng\": \"-58.666667\",\r\n    \"countryCode\": \"AR\",\r\n    \"continent\": \"South America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Armenia\",\r\n    \"capital\": \"Yerevan\",\r\n    \"lat\": \"40.16666667\",\r\n    \"lng\": \"44.5\",\r\n    \"countryCode\": \"AM\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Aruba\",\r\n    \"capital\": \"Oranjestad\",\r\n    \"lat\": \"12.51666667\",\r\n    \"lng\": \"-70.033333\",\r\n    \"countryCode\": \"AW\",\r\n    \"continent\": \"North America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Australia\",\r\n    \"capital\": \"Canberra\",\r\n    \"lat\": \"-35.26666667\",\r\n    \"lng\": \"149.133333\",\r\n    \"countryCode\": \"AU\",\r\n    \"continent\": \"Australia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Austria\",\r\n    \"capital\": \"Vienna\",\r\n    \"lat\": \"48.2\",\r\n    \"lng\": \"16.366667\",\r\n    \"countryCode\": \"AT\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Azerbaijan\",\r\n    \"capital\": \"Baku\",\r\n    \"lat\": \"40.38333333\",\r\n    \"lng\": \"49.866667\",\r\n    \"countryCode\": \"AZ\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Bahamas\",\r\n    \"capital\": \"Nassau\",\r\n    \"lat\": \"25.08333333\",\r\n    \"lng\": \"-77.35\",\r\n    \"countryCode\": \"BS\",\r\n    \"continent\": \"North America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Bahrain\",\r\n    \"capital\": \"Manama\",\r\n    \"lat\": \"26.23333333\",\r\n    \"lng\": \"50.566667\",\r\n    \"countryCode\": \"BH\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Bangladesh\",\r\n    \"capital\": \"Dhaka\",\r\n    \"lat\": \"23.71666667\",\r\n    \"lng\": \"90.4\",\r\n    \"countryCode\": \"BD\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Barbados\",\r\n    \"capital\": \"Bridgetown\",\r\n    \"lat\": \"13.1\",\r\n    \"lng\": \"-59.616667\",\r\n    \"countryCode\": \"BB\",\r\n    \"continent\": \"North America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Belarus\",\r\n    \"capital\": \"Minsk\",\r\n    \"lat\": \"53.9\",\r\n    \"lng\": \"27.566667\",\r\n    \"countryCode\": \"BY\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Belgium\",\r\n    \"capital\": \"Brussels\",\r\n    \"lat\": \"50.83333333\",\r\n    \"lng\": \"4.333333\",\r\n    \"countryCode\": \"BE\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Belize\",\r\n    \"capital\": \"Belmopan\",\r\n    \"lat\": \"17.25\",\r\n    \"lng\": \"-88.766667\",\r\n    \"countryCode\": \"BZ\",\r\n    \"continent\": \"Central America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Benin\",\r\n    \"capital\": \"Porto-Novo\",\r\n    \"lat\": \"6.483333333\",\r\n    \"lng\": \"2.616667\",\r\n    \"countryCode\": \"BJ\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Bermuda\",\r\n    \"capital\": \"Hamilton\",\r\n    \"lat\": \"32.28333333\",\r\n    \"lng\": \"-64.783333\",\r\n    \"countryCode\": \"BM\",\r\n    \"continent\": \"North America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Bhutan\",\r\n    \"capital\": \"Thimphu\",\r\n    \"lat\": \"27.46666667\",\r\n    \"lng\": \"89.633333\",\r\n    \"countryCode\": \"BT\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Bolivia\",\r\n    \"capital\": \"La Paz\",\r\n    \"lat\": \"-16.5\",\r\n    \"lng\": \"-68.15\",\r\n    \"countryCode\": \"BO\",\r\n    \"continent\": \"South America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Bosnia and Herzegovina\",\r\n    \"capital\": \"Sarajevo\",\r\n    \"lat\": \"43.86666667\",\r\n    \"lng\": \"18.416667\",\r\n    \"countryCode\": \"BA\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Botswana\",\r\n    \"capital\": \"Gaborone\",\r\n    \"lat\": \"-24.63333333\",\r\n    \"lng\": \"25.9\",\r\n    \"countryCode\": \"BW\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Brazil\",\r\n    \"capital\": \"Brasilia\",\r\n    \"lat\": \"-15.78333333\",\r\n    \"lng\": \"-47.916667\",\r\n    \"countryCode\": \"BR\",\r\n    \"continent\": \"South America\"\r\n  },\r\n  {\r\n    \"countryName\": \"British Indian Ocean Territory\",\r\n    \"capital\": \"Diego Garcia\",\r\n    \"lat\": \"-7.3\",\r\n    \"lng\": \"72.4\",\r\n    \"countryCode\": \"IO\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"British Virgin Islands\",\r\n    \"capital\": \"Road Town\",\r\n    \"lat\": \"18.41666667\",\r\n    \"lng\": \"-64.616667\",\r\n    \"countryCode\": \"VG\",\r\n    \"continent\": \"North America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Brunei Darussalam\",\r\n    \"capital\": \"Bandar Seri Begawan\",\r\n    \"lat\": \"4.883333333\",\r\n    \"lng\": \"114.933333\",\r\n    \"countryCode\": \"BN\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Bulgaria\",\r\n    \"capital\": \"Sofia\",\r\n    \"lat\": \"42.68333333\",\r\n    \"lng\": \"23.316667\",\r\n    \"countryCode\": \"BG\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Burkina Faso\",\r\n    \"capital\": \"Ouagadougou\",\r\n    \"lat\": \"12.36666667\",\r\n    \"lng\": \"-1.516667\",\r\n    \"countryCode\": \"BF\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Burundi\",\r\n    \"capital\": \"Bujumbura\",\r\n    \"lat\": \"-3.366666667\",\r\n    \"lng\": \"29.35\",\r\n    \"countryCode\": \"BI\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Cambodia\",\r\n    \"capital\": \"Phnom Penh\",\r\n    \"lat\": \"11.55\",\r\n    \"lng\": \"104.916667\",\r\n    \"countryCode\": \"KH\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Cameroon\",\r\n    \"capital\": \"Yaounde\",\r\n    \"lat\": \"3.866666667\",\r\n    \"lng\": \"11.516667\",\r\n    \"countryCode\": \"CM\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Canada\",\r\n    \"capital\": \"Ottawa\",\r\n    \"lat\": \"45.41666667\",\r\n    \"lng\": \"-75.7\",\r\n    \"countryCode\": \"CA\",\r\n    \"continent\": \"Central America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Cape Verde\",\r\n    \"capital\": \"Praia\",\r\n    \"lat\": \"14.91666667\",\r\n    \"lng\": \"-23.516667\",\r\n    \"countryCode\": \"CV\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Cayman Islands\",\r\n    \"capital\": \"George Town\",\r\n    \"lat\": \"19.3\",\r\n    \"lng\": \"-81.383333\",\r\n    \"countryCode\": \"KY\",\r\n    \"continent\": \"North America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Central African Republic\",\r\n    \"capital\": \"Bangui\",\r\n    \"lat\": \"4.366666667\",\r\n    \"lng\": \"18.583333\",\r\n    \"countryCode\": \"CF\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Chad\",\r\n    \"capital\": \"N’Djamena\",\r\n    \"lat\": \"12.1\",\r\n    \"lng\": \"15.033333\",\r\n    \"countryCode\": \"TD\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Chile\",\r\n    \"capital\": \"Santiago\",\r\n    \"lat\": \"-33.45\",\r\n    \"lng\": \"-70.666667\",\r\n    \"countryCode\": \"CL\",\r\n    \"continent\": \"South America\"\r\n  },\r\n  {\r\n    \"countryName\": \"China\",\r\n    \"capital\": \"Beijing\",\r\n    \"lat\": \"39.91666667\",\r\n    \"lng\": \"116.383333\",\r\n    \"countryCode\": \"CN\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Christmas Island\",\r\n    \"capital\": \"The Settlement\",\r\n    \"lat\": \"-10.41666667\",\r\n    \"lng\": \"105.716667\",\r\n    \"countryCode\": \"CX\",\r\n    \"continent\": \"Australia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Cocos Islands\",\r\n    \"capital\": \"West Island\",\r\n    \"lat\": \"-12.16666667\",\r\n    \"lng\": \"96.833333\",\r\n    \"countryCode\": \"CC\",\r\n    \"continent\": \"Australia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Colombia\",\r\n    \"capital\": \"Bogota\",\r\n    \"lat\": \"4.6\",\r\n    \"lng\": \"-74.083333\",\r\n    \"countryCode\": \"CO\",\r\n    \"continent\": \"South America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Comoros\",\r\n    \"capital\": \"Moroni\",\r\n    \"lat\": \"-11.7\",\r\n    \"lng\": \"43.233333\",\r\n    \"countryCode\": \"KM\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Cook Islands\",\r\n    \"capital\": \"Avarua\",\r\n    \"lat\": \"-21.2\",\r\n    \"lng\": \"-159.766667\",\r\n    \"countryCode\": \"CK\",\r\n    \"continent\": \"Australia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Costa Rica\",\r\n    \"capital\": \"San Jose\",\r\n    \"lat\": \"9.933333333\",\r\n    \"lng\": \"-84.083333\",\r\n    \"countryCode\": \"CR\",\r\n    \"continent\": \"Central America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Cote d’Ivoire\",\r\n    \"capital\": \"Yamoussoukro\",\r\n    \"lat\": \"6.816666667\",\r\n    \"lng\": \"-5.266667\",\r\n    \"countryCode\": \"CI\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Croatia\",\r\n    \"capital\": \"Zagreb\",\r\n    \"lat\": \"45.8\",\r\n    \"lng\": \"16\",\r\n    \"countryCode\": \"HR\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Cuba\",\r\n    \"capital\": \"Havana\",\r\n    \"lat\": \"23.11666667\",\r\n    \"lng\": \"-82.35\",\r\n    \"countryCode\": \"CU\",\r\n    \"continent\": \"North America\"\r\n  },\r\n  {\r\n    \"countryName\": \"CuraÃ§ao\",\r\n    \"capital\": \"Willemstad\",\r\n    \"lat\": \"12.1\",\r\n    \"lng\": \"-68.916667\",\r\n    \"countryCode\": \"CW\",\r\n    \"continent\": \"North America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Cyprus\",\r\n    \"capital\": \"Nicosia\",\r\n    \"lat\": \"35.16666667\",\r\n    \"lng\": \"33.366667\",\r\n    \"countryCode\": \"CY\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Czech Republic\",\r\n    \"capital\": \"Prague\",\r\n    \"lat\": \"50.08333333\",\r\n    \"lng\": \"14.466667\",\r\n    \"countryCode\": \"CZ\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Democratic Republic of the Congo\",\r\n    \"capital\": \"Kinshasa\",\r\n    \"lat\": \"-4.316666667\",\r\n    \"lng\": \"15.3\",\r\n    \"countryCode\": \"CD\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Denmark\",\r\n    \"capital\": \"Copenhagen\",\r\n    \"lat\": \"55.66666667\",\r\n    \"lng\": \"12.583333\",\r\n    \"countryCode\": \"DK\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Djibouti\",\r\n    \"capital\": \"Djibouti\",\r\n    \"lat\": \"11.58333333\",\r\n    \"lng\": \"43.15\",\r\n    \"countryCode\": \"DJ\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Dominica\",\r\n    \"capital\": \"Roseau\",\r\n    \"lat\": \"15.3\",\r\n    \"lng\": \"-61.4\",\r\n    \"countryCode\": \"DM\",\r\n    \"continent\": \"North America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Dominican Republic\",\r\n    \"capital\": \"Santo Domingo\",\r\n    \"lat\": \"18.46666667\",\r\n    \"lng\": \"-69.9\",\r\n    \"countryCode\": \"DO\",\r\n    \"continent\": \"North America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Ecuador\",\r\n    \"capital\": \"Quito\",\r\n    \"lat\": \"-0.216666667\",\r\n    \"lng\": \"-78.5\",\r\n    \"countryCode\": \"EC\",\r\n    \"continent\": \"South America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Egypt\",\r\n    \"capital\": \"Cairo\",\r\n    \"lat\": \"30.05\",\r\n    \"lng\": \"31.25\",\r\n    \"countryCode\": \"EG\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"El Salvador\",\r\n    \"capital\": \"San Salvador\",\r\n    \"lat\": \"13.7\",\r\n    \"lng\": \"-89.2\",\r\n    \"countryCode\": \"SV\",\r\n    \"continent\": \"Central America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Equatorial Guinea\",\r\n    \"capital\": \"Malabo\",\r\n    \"lat\": \"3.75\",\r\n    \"lng\": \"8.783333\",\r\n    \"countryCode\": \"GQ\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Eritrea\",\r\n    \"capital\": \"Asmara\",\r\n    \"lat\": \"15.33333333\",\r\n    \"lng\": \"38.933333\",\r\n    \"countryCode\": \"ER\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Estonia\",\r\n    \"capital\": \"Tallinn\",\r\n    \"lat\": \"59.43333333\",\r\n    \"lng\": \"24.716667\",\r\n    \"countryCode\": \"EE\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Ethiopia\",\r\n    \"capital\": \"Addis Ababa\",\r\n    \"lat\": \"9.033333333\",\r\n    \"lng\": \"38.7\",\r\n    \"countryCode\": \"ET\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Falkland Islands\",\r\n    \"capital\": \"Stanley\",\r\n    \"lat\": \"-51.7\",\r\n    \"lng\": \"-57.85\",\r\n    \"countryCode\": \"FK\",\r\n    \"continent\": \"South America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Faroe Islands\",\r\n    \"capital\": \"Torshavn\",\r\n    \"lat\": \"62\",\r\n    \"lng\": \"-6.766667\",\r\n    \"countryCode\": \"FO\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Federated States of Micronesia\",\r\n    \"capital\": \"Palikir\",\r\n    \"lat\": \"6.916666667\",\r\n    \"lng\": \"158.15\",\r\n    \"countryCode\": \"FM\",\r\n    \"continent\": \"Australia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Fiji\",\r\n    \"capital\": \"Suva\",\r\n    \"lat\": \"-18.13333333\",\r\n    \"lng\": \"178.416667\",\r\n    \"countryCode\": \"FJ\",\r\n    \"continent\": \"Australia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Finland\",\r\n    \"capital\": \"Helsinki\",\r\n    \"lat\": \"60.16666667\",\r\n    \"lng\": \"24.933333\",\r\n    \"countryCode\": \"FI\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"France\",\r\n    \"capital\": \"Paris\",\r\n    \"lat\": \"48.86666667\",\r\n    \"lng\": \"2.333333\",\r\n    \"countryCode\": \"FR\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"French Polynesia\",\r\n    \"capital\": \"Papeete\",\r\n    \"lat\": \"-17.53333333\",\r\n    \"lng\": \"-149.566667\",\r\n    \"countryCode\": \"PF\",\r\n    \"continent\": \"Australia\"\r\n  },\r\n  {\r\n    \"countryName\": \"French Southern and Antarctic Lands\",\r\n    \"capital\": \"Port-aux-FranÃ§ais\",\r\n    \"lat\": \"-49.35\",\r\n    \"lng\": \"70.216667\",\r\n    \"countryCode\": \"TF\",\r\n    \"continent\": \"Antarctica\"\r\n  },\r\n  {\r\n    \"countryName\": \"Gabon\",\r\n    \"capital\": \"Libreville\",\r\n    \"lat\": \"0.383333333\",\r\n    \"lng\": \"9.45\",\r\n    \"countryCode\": \"GA\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Georgia\",\r\n    \"capital\": \"Tbilisi\",\r\n    \"lat\": \"41.68333333\",\r\n    \"lng\": \"44.833333\",\r\n    \"countryCode\": \"GE\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Germany\",\r\n    \"capital\": \"Berlin\",\r\n    \"lat\": \"52.51666667\",\r\n    \"lng\": \"13.4\",\r\n    \"countryCode\": \"DE\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Ghana\",\r\n    \"capital\": \"Accra\",\r\n    \"lat\": \"5.55\",\r\n    \"lng\": \"-0.216667\",\r\n    \"countryCode\": \"GH\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Gibraltar\",\r\n    \"capital\": \"Gibraltar\",\r\n    \"lat\": \"36.13333333\",\r\n    \"lng\": \"-5.35\",\r\n    \"countryCode\": \"GI\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Greece\",\r\n    \"capital\": \"Athens\",\r\n    \"lat\": \"37.98333333\",\r\n    \"lng\": \"23.733333\",\r\n    \"countryCode\": \"GR\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Greenland\",\r\n    \"capital\": \"Nuuk\",\r\n    \"lat\": \"64.18333333\",\r\n    \"lng\": \"-51.75\",\r\n    \"countryCode\": \"GL\",\r\n    \"continent\": \"Central America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Grenada\",\r\n    \"capital\": \"Saint George’s\",\r\n    \"lat\": \"12.05\",\r\n    \"lng\": \"-61.75\",\r\n    \"countryCode\": \"GD\",\r\n    \"continent\": \"North America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Guam\",\r\n    \"capital\": \"Hagatna\",\r\n    \"lat\": \"13.46666667\",\r\n    \"lng\": \"144.733333\",\r\n    \"countryCode\": \"GU\",\r\n    \"continent\": \"Australia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Guatemala\",\r\n    \"capital\": \"Guatemala City\",\r\n    \"lat\": \"14.61666667\",\r\n    \"lng\": \"-90.516667\",\r\n    \"countryCode\": \"GT\",\r\n    \"continent\": \"Central America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Guernsey\",\r\n    \"capital\": \"Saint Peter Port\",\r\n    \"lat\": \"49.45\",\r\n    \"lng\": \"-2.533333\",\r\n    \"countryCode\": \"GG\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Guinea\",\r\n    \"capital\": \"Conakry\",\r\n    \"lat\": \"9.5\",\r\n    \"lng\": \"-13.7\",\r\n    \"countryCode\": \"GN\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Guinea-Bissau\",\r\n    \"capital\": \"Bissau\",\r\n    \"lat\": \"11.85\",\r\n    \"lng\": \"-15.583333\",\r\n    \"countryCode\": \"GW\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Guyana\",\r\n    \"capital\": \"Georgetown\",\r\n    \"lat\": \"6.8\",\r\n    \"lng\": \"-58.15\",\r\n    \"countryCode\": \"GY\",\r\n    \"continent\": \"South America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Haiti\",\r\n    \"capital\": \"Port-au-Prince\",\r\n    \"lat\": \"18.53333333\",\r\n    \"lng\": \"-72.333333\",\r\n    \"countryCode\": \"HT\",\r\n    \"continent\": \"North America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Heard Island and McDonald Islands\",\r\n    \"capital\": \"N/A\",\r\n    \"lat\": \"0\",\r\n    \"lng\": \"0\",\r\n    \"countryCode\": \"HM\",\r\n    \"continent\": \"Antarctica\"\r\n  },\r\n  {\r\n    \"countryName\": \"Honduras\",\r\n    \"capital\": \"Tegucigalpa\",\r\n    \"lat\": \"14.1\",\r\n    \"lng\": \"-87.216667\",\r\n    \"countryCode\": \"HN\",\r\n    \"continent\": \"Central America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Hong Kong\",\r\n    \"capital\": \"N/A\",\r\n    \"lat\": \"0\",\r\n    \"lng\": \"0\",\r\n    \"countryCode\": \"HK\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Hungary\",\r\n    \"capital\": \"Budapest\",\r\n    \"lat\": \"47.5\",\r\n    \"lng\": \"19.083333\",\r\n    \"countryCode\": \"HU\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Iceland\",\r\n    \"capital\": \"Reykjavik\",\r\n    \"lat\": \"64.15\",\r\n    \"lng\": \"-21.95\",\r\n    \"countryCode\": \"IS\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"India\",\r\n    \"capital\": \"New Delhi\",\r\n    \"lat\": \"28.6\",\r\n    \"lng\": \"77.2\",\r\n    \"countryCode\": \"IN\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Indonesia\",\r\n    \"capital\": \"Jakarta\",\r\n    \"lat\": \"-6.166666667\",\r\n    \"lng\": \"106.816667\",\r\n    \"countryCode\": \"ID\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Iran\",\r\n    \"capital\": \"Tehran\",\r\n    \"lat\": \"35.7\",\r\n    \"lng\": \"51.416667\",\r\n    \"countryCode\": \"IR\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Iraq\",\r\n    \"capital\": \"Baghdad\",\r\n    \"lat\": \"33.33333333\",\r\n    \"lng\": \"44.4\",\r\n    \"countryCode\": \"IQ\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Ireland\",\r\n    \"capital\": \"Dublin\",\r\n    \"lat\": \"53.31666667\",\r\n    \"lng\": \"-6.233333\",\r\n    \"countryCode\": \"IE\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Isle of Man\",\r\n    \"capital\": \"Douglas\",\r\n    \"lat\": \"54.15\",\r\n    \"lng\": \"-4.483333\",\r\n    \"countryCode\": \"IM\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Israel\",\r\n    \"capital\": \"Jerusalem\",\r\n    \"lat\": \"31.76666667\",\r\n    \"lng\": \"35.233333\",\r\n    \"countryCode\": \"IL\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Italy\",\r\n    \"capital\": \"Rome\",\r\n    \"lat\": \"41.9\",\r\n    \"lng\": \"12.483333\",\r\n    \"countryCode\": \"IT\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Jamaica\",\r\n    \"capital\": \"Kingston\",\r\n    \"lat\": \"18\",\r\n    \"lng\": \"-76.8\",\r\n    \"countryCode\": \"JM\",\r\n    \"continent\": \"North America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Japan\",\r\n    \"capital\": \"Tokyo\",\r\n    \"lat\": \"35.68333333\",\r\n    \"lng\": \"139.75\",\r\n    \"countryCode\": \"JP\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Jersey\",\r\n    \"capital\": \"Saint Helier\",\r\n    \"lat\": \"49.18333333\",\r\n    \"lng\": \"-2.1\",\r\n    \"countryCode\": \"JE\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Jordan\",\r\n    \"capital\": \"Amman\",\r\n    \"lat\": \"31.95\",\r\n    \"lng\": \"35.933333\",\r\n    \"countryCode\": \"JO\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Kazakhstan\",\r\n    \"capital\": \"Astana\",\r\n    \"lat\": \"51.16666667\",\r\n    \"lng\": \"71.416667\",\r\n    \"countryCode\": \"KZ\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Kenya\",\r\n    \"capital\": \"Nairobi\",\r\n    \"lat\": \"-1.283333333\",\r\n    \"lng\": \"36.816667\",\r\n    \"countryCode\": \"KE\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Kiribati\",\r\n    \"capital\": \"Tarawa\",\r\n    \"lat\": \"-0.883333333\",\r\n    \"lng\": \"169.533333\",\r\n    \"countryCode\": \"KI\",\r\n    \"continent\": \"Australia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Kosovo\",\r\n    \"capital\": \"Pristina\",\r\n    \"lat\": \"42.66666667\",\r\n    \"lng\": \"21.166667\",\r\n    \"countryCode\": \"KO\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Kuwait\",\r\n    \"capital\": \"Kuwait City\",\r\n    \"lat\": \"29.36666667\",\r\n    \"lng\": \"47.966667\",\r\n    \"countryCode\": \"KW\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Kyrgyzstan\",\r\n    \"capital\": \"Bishkek\",\r\n    \"lat\": \"42.86666667\",\r\n    \"lng\": \"74.6\",\r\n    \"countryCode\": \"KG\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Laos\",\r\n    \"capital\": \"Vientiane\",\r\n    \"lat\": \"17.96666667\",\r\n    \"lng\": \"102.6\",\r\n    \"countryCode\": \"LA\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Latvia\",\r\n    \"capital\": \"Riga\",\r\n    \"lat\": \"56.95\",\r\n    \"lng\": \"24.1\",\r\n    \"countryCode\": \"LV\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Lebanon\",\r\n    \"capital\": \"Beirut\",\r\n    \"lat\": \"33.86666667\",\r\n    \"lng\": \"35.5\",\r\n    \"countryCode\": \"LB\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Lesotho\",\r\n    \"capital\": \"Maseru\",\r\n    \"lat\": \"-29.31666667\",\r\n    \"lng\": \"27.483333\",\r\n    \"countryCode\": \"LS\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Liberia\",\r\n    \"capital\": \"Monrovia\",\r\n    \"lat\": \"6.3\",\r\n    \"lng\": \"-10.8\",\r\n    \"countryCode\": \"LR\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Libya\",\r\n    \"capital\": \"Tripoli\",\r\n    \"lat\": \"32.88333333\",\r\n    \"lng\": \"13.166667\",\r\n    \"countryCode\": \"LY\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Liechtenstein\",\r\n    \"capital\": \"Vaduz\",\r\n    \"lat\": \"47.13333333\",\r\n    \"lng\": \"9.516667\",\r\n    \"countryCode\": \"LI\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Lithuania\",\r\n    \"capital\": \"Vilnius\",\r\n    \"lat\": \"54.68333333\",\r\n    \"lng\": \"25.316667\",\r\n    \"countryCode\": \"LT\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Luxembourg\",\r\n    \"capital\": \"Luxembourg\",\r\n    \"lat\": \"49.6\",\r\n    \"lng\": \"6.116667\",\r\n    \"countryCode\": \"LU\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Macau\",\r\n    \"capital\": \"N/A\",\r\n    \"lat\": \"0\",\r\n    \"lng\": \"0\",\r\n    \"countryCode\": \"MO\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Macedonia\",\r\n    \"capital\": \"Skopje\",\r\n    \"lat\": \"42\",\r\n    \"lng\": \"21.433333\",\r\n    \"countryCode\": \"MK\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Madagascar\",\r\n    \"capital\": \"Antananarivo\",\r\n    \"lat\": \"-18.91666667\",\r\n    \"lng\": \"47.516667\",\r\n    \"countryCode\": \"MG\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Malawi\",\r\n    \"capital\": \"Lilongwe\",\r\n    \"lat\": \"-13.96666667\",\r\n    \"lng\": \"33.783333\",\r\n    \"countryCode\": \"MW\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Malaysia\",\r\n    \"capital\": \"Kuala Lumpur\",\r\n    \"lat\": \"3.166666667\",\r\n    \"lng\": \"101.7\",\r\n    \"countryCode\": \"MY\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Maldives\",\r\n    \"capital\": \"Male\",\r\n    \"lat\": \"4.166666667\",\r\n    \"lng\": \"73.5\",\r\n    \"countryCode\": \"MV\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Mali\",\r\n    \"capital\": \"Bamako\",\r\n    \"lat\": \"12.65\",\r\n    \"lng\": \"-8\",\r\n    \"countryCode\": \"ML\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Malta\",\r\n    \"capital\": \"Valletta\",\r\n    \"lat\": \"35.88333333\",\r\n    \"lng\": \"14.5\",\r\n    \"countryCode\": \"MT\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Marshall Islands\",\r\n    \"capital\": \"Majuro\",\r\n    \"lat\": \"7.1\",\r\n    \"lng\": \"171.383333\",\r\n    \"countryCode\": \"MH\",\r\n    \"continent\": \"Australia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Mauritania\",\r\n    \"capital\": \"Nouakchott\",\r\n    \"lat\": \"18.06666667\",\r\n    \"lng\": \"-15.966667\",\r\n    \"countryCode\": \"MR\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Mauritius\",\r\n    \"capital\": \"Port Louis\",\r\n    \"lat\": \"-20.15\",\r\n    \"lng\": \"57.483333\",\r\n    \"countryCode\": \"MU\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Mexico\",\r\n    \"capital\": \"Mexico City\",\r\n    \"lat\": \"19.43333333\",\r\n    \"lng\": \"-99.133333\",\r\n    \"countryCode\": \"MX\",\r\n    \"continent\": \"Central America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Moldova\",\r\n    \"capital\": \"Chisinau\",\r\n    \"lat\": \"47\",\r\n    \"lng\": \"28.85\",\r\n    \"countryCode\": \"MD\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Monaco\",\r\n    \"capital\": \"Monaco\",\r\n    \"lat\": \"43.73333333\",\r\n    \"lng\": \"7.416667\",\r\n    \"countryCode\": \"MC\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Mongolia\",\r\n    \"capital\": \"Ulaanbaatar\",\r\n    \"lat\": \"47.91666667\",\r\n    \"lng\": \"106.916667\",\r\n    \"countryCode\": \"MN\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Montenegro\",\r\n    \"capital\": \"Podgorica\",\r\n    \"lat\": \"42.43333333\",\r\n    \"lng\": \"19.266667\",\r\n    \"countryCode\": \"ME\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Montserrat\",\r\n    \"capital\": \"Plymouth\",\r\n    \"lat\": \"16.7\",\r\n    \"lng\": \"-62.216667\",\r\n    \"countryCode\": \"MS\",\r\n    \"continent\": \"North America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Morocco\",\r\n    \"capital\": \"Rabat\",\r\n    \"lat\": \"34.01666667\",\r\n    \"lng\": \"-6.816667\",\r\n    \"countryCode\": \"MA\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Mozambique\",\r\n    \"capital\": \"Maputo\",\r\n    \"lat\": \"-25.95\",\r\n    \"lng\": \"32.583333\",\r\n    \"countryCode\": \"MZ\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Myanmar\",\r\n    \"capital\": \"Rangoon\",\r\n    \"lat\": \"16.8\",\r\n    \"lng\": \"96.15\",\r\n    \"countryCode\": \"MM\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Namibia\",\r\n    \"capital\": \"Windhoek\",\r\n    \"lat\": \"-22.56666667\",\r\n    \"lng\": \"17.083333\",\r\n    \"countryCode\": \"NA\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Nauru\",\r\n    \"capital\": \"Yaren\",\r\n    \"lat\": \"-0.5477\",\r\n    \"lng\": \"166.920867\",\r\n    \"countryCode\": \"NR\",\r\n    \"continent\": \"Australia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Nepal\",\r\n    \"capital\": \"Kathmandu\",\r\n    \"lat\": \"27.71666667\",\r\n    \"lng\": \"85.316667\",\r\n    \"countryCode\": \"NP\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Netherlands\",\r\n    \"capital\": \"Amsterdam\",\r\n    \"lat\": \"52.35\",\r\n    \"lng\": \"4.916667\",\r\n    \"countryCode\": \"NL\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"New Caledonia\",\r\n    \"capital\": \"Noumea\",\r\n    \"lat\": \"-22.26666667\",\r\n    \"lng\": \"166.45\",\r\n    \"countryCode\": \"NC\",\r\n    \"continent\": \"Australia\"\r\n  },\r\n  {\r\n    \"countryName\": \"New Zealand\",\r\n    \"capital\": \"Wellington\",\r\n    \"lat\": \"-41.3\",\r\n    \"lng\": \"174.783333\",\r\n    \"countryCode\": \"NZ\",\r\n    \"continent\": \"Australia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Nicaragua\",\r\n    \"capital\": \"Managua\",\r\n    \"lat\": \"12.13333333\",\r\n    \"lng\": \"-86.25\",\r\n    \"countryCode\": \"NI\",\r\n    \"continent\": \"Central America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Niger\",\r\n    \"capital\": \"Niamey\",\r\n    \"lat\": \"13.51666667\",\r\n    \"lng\": \"2.116667\",\r\n    \"countryCode\": \"NE\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Nigeria\",\r\n    \"capital\": \"Abuja\",\r\n    \"lat\": \"9.083333333\",\r\n    \"lng\": \"7.533333\",\r\n    \"countryCode\": \"NG\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Niue\",\r\n    \"capital\": \"Alofi\",\r\n    \"lat\": \"-19.01666667\",\r\n    \"lng\": \"-169.916667\",\r\n    \"countryCode\": \"NU\",\r\n    \"continent\": \"Australia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Norfolk Island\",\r\n    \"capital\": \"Kingston\",\r\n    \"lat\": \"-29.05\",\r\n    \"lng\": \"167.966667\",\r\n    \"countryCode\": \"NF\",\r\n    \"continent\": \"Australia\"\r\n  },\r\n  {\r\n    \"countryName\": \"North Korea\",\r\n    \"capital\": \"Pyongyang\",\r\n    \"lat\": \"39.01666667\",\r\n    \"lng\": \"125.75\",\r\n    \"countryCode\": \"KP\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Northern Mariana Islands\",\r\n    \"capital\": \"Saipan\",\r\n    \"lat\": \"15.2\",\r\n    \"lng\": \"145.75\",\r\n    \"countryCode\": \"MP\",\r\n    \"continent\": \"Australia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Norway\",\r\n    \"capital\": \"Oslo\",\r\n    \"lat\": \"59.91666667\",\r\n    \"lng\": \"10.75\",\r\n    \"countryCode\": \"NO\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Oman\",\r\n    \"capital\": \"Muscat\",\r\n    \"lat\": \"23.61666667\",\r\n    \"lng\": \"58.583333\",\r\n    \"countryCode\": \"OM\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Pakistan\",\r\n    \"capital\": \"Islamabad\",\r\n    \"lat\": \"33.68333333\",\r\n    \"lng\": \"73.05\",\r\n    \"countryCode\": \"PK\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Palau\",\r\n    \"capital\": \"Melekeok\",\r\n    \"lat\": \"7.483333333\",\r\n    \"lng\": \"134.633333\",\r\n    \"countryCode\": \"PW\",\r\n    \"continent\": \"Australia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Palestine\",\r\n    \"capital\": \"Jerusalem\",\r\n    \"lat\": \"31.76666667\",\r\n    \"lng\": \"35.233333\",\r\n    \"countryCode\": \"PS\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Panama\",\r\n    \"capital\": \"Panama City\",\r\n    \"lat\": \"8.966666667\",\r\n    \"lng\": \"-79.533333\",\r\n    \"countryCode\": \"PA\",\r\n    \"continent\": \"Central America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Papua New Guinea\",\r\n    \"capital\": \"Port Moresby\",\r\n    \"lat\": \"-9.45\",\r\n    \"lng\": \"147.183333\",\r\n    \"countryCode\": \"PG\",\r\n    \"continent\": \"Australia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Paraguay\",\r\n    \"capital\": \"Asuncion\",\r\n    \"lat\": \"-25.26666667\",\r\n    \"lng\": \"-57.666667\",\r\n    \"countryCode\": \"PY\",\r\n    \"continent\": \"South America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Peru\",\r\n    \"capital\": \"Lima\",\r\n    \"lat\": \"-12.05\",\r\n    \"lng\": \"-77.05\",\r\n    \"countryCode\": \"PE\",\r\n    \"continent\": \"South America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Philippines\",\r\n    \"capital\": \"Manila\",\r\n    \"lat\": \"14.6\",\r\n    \"lng\": \"120.966667\",\r\n    \"countryCode\": \"PH\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Pitcairn Islands\",\r\n    \"capital\": \"Adamstown\",\r\n    \"lat\": \"-25.06666667\",\r\n    \"lng\": \"-130.083333\",\r\n    \"countryCode\": \"PN\",\r\n    \"continent\": \"Australia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Poland\",\r\n    \"capital\": \"Warsaw\",\r\n    \"lat\": \"52.25\",\r\n    \"lng\": \"21\",\r\n    \"countryCode\": \"PL\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Portugal\",\r\n    \"capital\": \"Lisbon\",\r\n    \"lat\": \"38.71666667\",\r\n    \"lng\": \"-9.133333\",\r\n    \"countryCode\": \"PT\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Puerto Rico\",\r\n    \"capital\": \"San Juan\",\r\n    \"lat\": \"18.46666667\",\r\n    \"lng\": \"-66.116667\",\r\n    \"countryCode\": \"PR\",\r\n    \"continent\": \"North America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Qatar\",\r\n    \"capital\": \"Doha\",\r\n    \"lat\": \"25.28333333\",\r\n    \"lng\": \"51.533333\",\r\n    \"countryCode\": \"QA\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Republic of Congo\",\r\n    \"capital\": \"Brazzaville\",\r\n    \"lat\": \"-4.25\",\r\n    \"lng\": \"15.283333\",\r\n    \"countryCode\": \"CG\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Romania\",\r\n    \"capital\": \"Bucharest\",\r\n    \"lat\": \"44.43333333\",\r\n    \"lng\": \"26.1\",\r\n    \"countryCode\": \"RO\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Russia\",\r\n    \"capital\": \"Moscow\",\r\n    \"lat\": \"55.75\",\r\n    \"lng\": \"37.6\",\r\n    \"countryCode\": \"RU\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Rwanda\",\r\n    \"capital\": \"Kigali\",\r\n    \"lat\": \"-1.95\",\r\n    \"lng\": \"30.05\",\r\n    \"countryCode\": \"RW\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Saint Barthelemy\",\r\n    \"capital\": \"Gustavia\",\r\n    \"lat\": \"17.88333333\",\r\n    \"lng\": \"-62.85\",\r\n    \"countryCode\": \"BL\",\r\n    \"continent\": \"North America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Saint Helena\",\r\n    \"capital\": \"Jamestown\",\r\n    \"lat\": \"-15.93333333\",\r\n    \"lng\": \"-5.716667\",\r\n    \"countryCode\": \"SH\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Saint Kitts and Nevis\",\r\n    \"capital\": \"Basseterre\",\r\n    \"lat\": \"17.3\",\r\n    \"lng\": \"-62.716667\",\r\n    \"countryCode\": \"KN\",\r\n    \"continent\": \"North America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Saint Lucia\",\r\n    \"capital\": \"Castries\",\r\n    \"lat\": \"14\",\r\n    \"lng\": \"-61\",\r\n    \"countryCode\": \"LC\",\r\n    \"continent\": \"North America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Saint Martin\",\r\n    \"capital\": \"Marigot\",\r\n    \"lat\": \"18.0731\",\r\n    \"lng\": \"-63.0822\",\r\n    \"countryCode\": \"MF\",\r\n    \"continent\": \"North America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Saint Pierre and Miquelon\",\r\n    \"capital\": \"Saint-Pierre\",\r\n    \"lat\": \"46.76666667\",\r\n    \"lng\": \"-56.183333\",\r\n    \"countryCode\": \"PM\",\r\n    \"continent\": \"Central America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Saint Vincent and the Grenadines\",\r\n    \"capital\": \"Kingstown\",\r\n    \"lat\": \"13.13333333\",\r\n    \"lng\": \"-61.216667\",\r\n    \"countryCode\": \"VC\",\r\n    \"continent\": \"Central America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Samoa\",\r\n    \"capital\": \"Apia\",\r\n    \"lat\": \"-13.81666667\",\r\n    \"lng\": \"-171.766667\",\r\n    \"countryCode\": \"WS\",\r\n    \"continent\": \"Australia\"\r\n  },\r\n  {\r\n    \"countryName\": \"San Marino\",\r\n    \"capital\": \"San Marino\",\r\n    \"lat\": \"43.93333333\",\r\n    \"lng\": \"12.416667\",\r\n    \"countryCode\": \"SM\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Sao Tome and Principe\",\r\n    \"capital\": \"Sao Tome\",\r\n    \"lat\": \"0.333333333\",\r\n    \"lng\": \"6.733333\",\r\n    \"countryCode\": \"ST\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Saudi Arabia\",\r\n    \"capital\": \"Riyadh\",\r\n    \"lat\": \"24.65\",\r\n    \"lng\": \"46.7\",\r\n    \"countryCode\": \"SA\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Senegal\",\r\n    \"capital\": \"Dakar\",\r\n    \"lat\": \"14.73333333\",\r\n    \"lng\": \"-17.633333\",\r\n    \"countryCode\": \"SN\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Serbia\",\r\n    \"capital\": \"Belgrade\",\r\n    \"lat\": \"44.83333333\",\r\n    \"lng\": \"20.5\",\r\n    \"countryCode\": \"RS\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Seychelles\",\r\n    \"capital\": \"Victoria\",\r\n    \"lat\": \"-4.616666667\",\r\n    \"lng\": \"55.45\",\r\n    \"countryCode\": \"SC\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Sierra Leone\",\r\n    \"capital\": \"Freetown\",\r\n    \"lat\": \"8.483333333\",\r\n    \"lng\": \"-13.233333\",\r\n    \"countryCode\": \"SL\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Singapore\",\r\n    \"capital\": \"Singapore\",\r\n    \"lat\": \"1.283333333\",\r\n    \"lng\": \"103.85\",\r\n    \"countryCode\": \"SG\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Sint Maarten\",\r\n    \"capital\": \"Philipsburg\",\r\n    \"lat\": \"18.01666667\",\r\n    \"lng\": \"-63.033333\",\r\n    \"countryCode\": \"SX\",\r\n    \"continent\": \"North America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Slovakia\",\r\n    \"capital\": \"Bratislava\",\r\n    \"lat\": \"48.15\",\r\n    \"lng\": \"17.116667\",\r\n    \"countryCode\": \"SK\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Slovenia\",\r\n    \"capital\": \"Ljubljana\",\r\n    \"lat\": \"46.05\",\r\n    \"lng\": \"14.516667\",\r\n    \"countryCode\": \"SI\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Solomon Islands\",\r\n    \"capital\": \"Honiara\",\r\n    \"lat\": \"-9.433333333\",\r\n    \"lng\": \"159.95\",\r\n    \"countryCode\": \"SB\",\r\n    \"continent\": \"Australia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Somalia\",\r\n    \"capital\": \"Mogadishu\",\r\n    \"lat\": \"2.066666667\",\r\n    \"lng\": \"45.333333\",\r\n    \"countryCode\": \"SO\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"South Africa\",\r\n    \"capital\": \"Pretoria\",\r\n    \"lat\": \"-25.7\",\r\n    \"lng\": \"28.216667\",\r\n    \"countryCode\": \"ZA\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"South Georgia and South Sandwich Islands\",\r\n    \"capital\": \"King Edward Point\",\r\n    \"lat\": \"-54.283333\",\r\n    \"lng\": \"-36.5\",\r\n    \"countryCode\": \"GS\",\r\n    \"continent\": \"Antarctica\"\r\n  },\r\n  {\r\n    \"countryName\": \"South Korea\",\r\n    \"capital\": \"Seoul\",\r\n    \"lat\": \"37.55\",\r\n    \"lng\": \"126.983333\",\r\n    \"countryCode\": \"KR\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"South Sudan\",\r\n    \"capital\": \"Juba\",\r\n    \"lat\": \"4.85\",\r\n    \"lng\": \"31.616667\",\r\n    \"countryCode\": \"SS\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Spain\",\r\n    \"capital\": \"Madrid\",\r\n    \"lat\": \"40.4\",\r\n    \"lng\": \"-3.683333\",\r\n    \"countryCode\": \"ES\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Sri Lanka\",\r\n    \"capital\": \"Colombo\",\r\n    \"lat\": \"6.916666667\",\r\n    \"lng\": \"79.833333\",\r\n    \"countryCode\": \"LK\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Sudan\",\r\n    \"capital\": \"Khartoum\",\r\n    \"lat\": \"15.6\",\r\n    \"lng\": \"32.533333\",\r\n    \"countryCode\": \"SD\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Suriname\",\r\n    \"capital\": \"Paramaribo\",\r\n    \"lat\": \"5.833333333\",\r\n    \"lng\": \"-55.166667\",\r\n    \"countryCode\": \"SR\",\r\n    \"continent\": \"South America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Svalbard\",\r\n    \"capital\": \"Longyearbyen\",\r\n    \"lat\": \"78.21666667\",\r\n    \"lng\": \"15.633333\",\r\n    \"countryCode\": \"SJ\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Swaziland\",\r\n    \"capital\": \"Mbabane\",\r\n    \"lat\": \"-26.31666667\",\r\n    \"lng\": \"31.133333\",\r\n    \"countryCode\": \"SZ\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Sweden\",\r\n    \"capital\": \"Stockholm\",\r\n    \"lat\": \"59.33333333\",\r\n    \"lng\": \"18.05\",\r\n    \"countryCode\": \"SE\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Switzerland\",\r\n    \"capital\": \"Bern\",\r\n    \"lat\": \"46.91666667\",\r\n    \"lng\": \"7.466667\",\r\n    \"countryCode\": \"CH\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Syria\",\r\n    \"capital\": \"Damascus\",\r\n    \"lat\": \"33.5\",\r\n    \"lng\": \"36.3\",\r\n    \"countryCode\": \"SY\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Taiwan\",\r\n    \"capital\": \"Taipei\",\r\n    \"lat\": \"25.03333333\",\r\n    \"lng\": \"121.516667\",\r\n    \"countryCode\": \"TW\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Tajikistan\",\r\n    \"capital\": \"Dushanbe\",\r\n    \"lat\": \"38.55\",\r\n    \"lng\": \"68.766667\",\r\n    \"countryCode\": \"TJ\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Tanzania\",\r\n    \"capital\": \"Dar es Salaam\",\r\n    \"lat\": \"-6.8\",\r\n    \"lng\": \"39.283333\",\r\n    \"countryCode\": \"TZ\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Thailand\",\r\n    \"capital\": \"Bangkok\",\r\n    \"lat\": \"13.75\",\r\n    \"lng\": \"100.516667\",\r\n    \"countryCode\": \"TH\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"The Gambia\",\r\n    \"capital\": \"Banjul\",\r\n    \"lat\": \"13.45\",\r\n    \"lng\": \"-16.566667\",\r\n    \"countryCode\": \"GM\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Timor-Leste\",\r\n    \"capital\": \"Dili\",\r\n    \"lat\": \"-8.583333333\",\r\n    \"lng\": \"125.6\",\r\n    \"countryCode\": \"TL\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Togo\",\r\n    \"capital\": \"Lome\",\r\n    \"lat\": \"6.116666667\",\r\n    \"lng\": \"1.216667\",\r\n    \"countryCode\": \"TG\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Tokelau\",\r\n    \"capital\": \"Atafu\",\r\n    \"lat\": \"-9.166667\",\r\n    \"lng\": \"-171.833333\",\r\n    \"countryCode\": \"TK\",\r\n    \"continent\": \"Australia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Tonga\",\r\n    \"capital\": \"Nuku’alofa\",\r\n    \"lat\": \"-21.13333333\",\r\n    \"lng\": \"-175.2\",\r\n    \"countryCode\": \"TO\",\r\n    \"continent\": \"Australia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Trinidad and Tobago\",\r\n    \"capital\": \"Port of Spain\",\r\n    \"lat\": \"10.65\",\r\n    \"lng\": \"-61.516667\",\r\n    \"countryCode\": \"TT\",\r\n    \"continent\": \"North America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Tunisia\",\r\n    \"capital\": \"Tunis\",\r\n    \"lat\": \"36.8\",\r\n    \"lng\": \"10.183333\",\r\n    \"countryCode\": \"TN\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Turkey\",\r\n    \"capital\": \"Ankara\",\r\n    \"lat\": \"39.93333333\",\r\n    \"lng\": \"32.866667\",\r\n    \"countryCode\": \"TR\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Turkmenistan\",\r\n    \"capital\": \"Ashgabat\",\r\n    \"lat\": \"37.95\",\r\n    \"lng\": \"58.383333\",\r\n    \"countryCode\": \"TM\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Turks and Caicos Islands\",\r\n    \"capital\": \"Grand Turk\",\r\n    \"lat\": \"21.46666667\",\r\n    \"lng\": \"-71.133333\",\r\n    \"countryCode\": \"TC\",\r\n    \"continent\": \"North America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Tuvalu\",\r\n    \"capital\": \"Funafuti\",\r\n    \"lat\": \"-8.516666667\",\r\n    \"lng\": \"179.216667\",\r\n    \"countryCode\": \"TV\",\r\n    \"continent\": \"Australia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Uganda\",\r\n    \"capital\": \"Kampala\",\r\n    \"lat\": \"0.316666667\",\r\n    \"lng\": \"32.55\",\r\n    \"countryCode\": \"UG\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Ukraine\",\r\n    \"capital\": \"Kyiv\",\r\n    \"lat\": \"50.43333333\",\r\n    \"lng\": \"30.516667\",\r\n    \"countryCode\": \"UA\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"United Arab Emirates\",\r\n    \"capital\": \"Abu Dhabi\",\r\n    \"lat\": \"24.46666667\",\r\n    \"lng\": \"54.366667\",\r\n    \"countryCode\": \"AE\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"United Kingdom\",\r\n    \"capital\": \"London\",\r\n    \"lat\": \"51.5\",\r\n    \"lng\": \"-0.083333\",\r\n    \"countryCode\": \"GB\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"United States\",\r\n    \"capital\": \"Washington, D.C.\",\r\n    \"lat\": \"38.883333\",\r\n    \"lng\": \"-77\",\r\n    \"countryCode\": \"US\",\r\n    \"continent\": \"Central America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Uruguay\",\r\n    \"capital\": \"Montevideo\",\r\n    \"lat\": \"-34.85\",\r\n    \"lng\": \"-56.166667\",\r\n    \"countryCode\": \"UY\",\r\n    \"continent\": \"South America\"\r\n  },\r\n  {\r\n    \"countryName\": \"US Minor Outlying Islands\",\r\n    \"capital\": \"Washington, D.C.\",\r\n    \"lat\": \"38.883333\",\r\n    \"lng\": \"-77\",\r\n    \"countryCode\": \"UM\",\r\n    \"continent\": \"Australia\"\r\n  },\r\n  {\r\n    \"countryName\": \"US Virgin Islands\",\r\n    \"capital\": \"Charlotte Amalie\",\r\n    \"lat\": \"18.35\",\r\n    \"lng\": \"-64.933333\",\r\n    \"countryCode\": \"VI\",\r\n    \"continent\": \"North America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Uzbekistan\",\r\n    \"capital\": \"Tashkent\",\r\n    \"lat\": \"41.31666667\",\r\n    \"lng\": \"69.25\",\r\n    \"countryCode\": \"UZ\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Vanuatu\",\r\n    \"capital\": \"Port-Vila\",\r\n    \"lat\": \"-17.73333333\",\r\n    \"lng\": \"168.316667\",\r\n    \"countryCode\": \"VU\",\r\n    \"continent\": \"Australia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Vatican City\",\r\n    \"capital\": \"Vatican City\",\r\n    \"lat\": \"41.9\",\r\n    \"lng\": \"12.45\",\r\n    \"countryCode\": \"VA\",\r\n    \"continent\": \"Europe\"\r\n  },\r\n  {\r\n    \"countryName\": \"Venezuela\",\r\n    \"capital\": \"Caracas\",\r\n    \"lat\": \"10.48333333\",\r\n    \"lng\": \"-66.866667\",\r\n    \"countryCode\": \"VE\",\r\n    \"continent\": \"South America\"\r\n  },\r\n  {\r\n    \"countryName\": \"Vietnam\",\r\n    \"capital\": \"Hanoi\",\r\n    \"lat\": \"21.03333333\",\r\n    \"lng\": \"105.85\",\r\n    \"countryCode\": \"VN\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Wallis and Futuna\",\r\n    \"capital\": \"Mata-Utu\",\r\n    \"lat\": \"-13.95\",\r\n    \"lng\": \"-171.933333\",\r\n    \"countryCode\": \"WF\",\r\n    \"continent\": \"Australia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Western Sahara\",\r\n    \"capital\": \"El-AaiÃºn\",\r\n    \"lat\": \"27.153611\",\r\n    \"lng\": \"-13.203333\",\r\n    \"countryCode\": \"EH\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Yemen\",\r\n    \"capital\": \"Sanaa\",\r\n    \"lat\": \"15.35\",\r\n    \"lng\": \"44.2\",\r\n    \"countryCode\": \"YE\",\r\n    \"continent\": \"Asia\"\r\n  },\r\n  {\r\n    \"countryName\": \"Zambia\",\r\n    \"capital\": \"Lusaka\",\r\n    \"lat\": \"-15.41666667\",\r\n    \"lng\": \"28.283333\",\r\n    \"countryCode\": \"ZM\",\r\n    \"continent\": \"Africa\"\r\n  },\r\n  {\r\n    \"countryName\": \"Zimbabwe\",\r\n    \"capital\": \"Harare\",\r\n    \"lat\": \"-17.81666667\",\r\n    \"lng\": \"31.033333\",\r\n    \"countryCode\": \"ZW\",\r\n    \"continent\": \"Africa\"\r\n  }\r\n]\r\n","export const distanceBetween = (a, b) => {\r\n    var R = 6371; // Radius of the earth in km\r\n\r\n    let lat1 = a.lat\r\n    let lng1 = a.lng\r\n\r\n    let lat2 = b.lat\r\n    let lng2 = b.lng\r\n\r\n    let dLat = (lat2 - lat1) * Math.PI / 180;\r\n    let dLon = (lng2 - lng1) * Math.PI / 180;\r\n\r\n    let d =\r\n       0.5 - Math.cos(dLat)/2 +\r\n       Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) *\r\n       (1 - Math.cos(dLon))/2;\r\n\r\n    return Math.floor(R * 2 * Math.asin(Math.sqrt(d)))\r\n}\r\n\r\nexport const randomBetween = (min, max) => {\r\n    min = Math.ceil(min)\r\n    max = Math.floor(max)\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n}\r\n\r\nexport const kmToMiles = (i) => {\r\n    return Math.round(i * 0.621371)\r\n}\r\n\r\nexport const numberWithCommas = (num) => {\r\n    return num.toLocaleString('en', {maximumSignificantDigits : 21})\r\n}\r\n","import React, { Component } from 'react'\r\nimport './Location.scss'\r\n\r\nimport { kmToMiles, numberWithCommas } from '../../lib/helpers'\r\n\r\nclass Location extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            selected: false,\r\n            correct: null,\r\n            distance: props.distance,\r\n            location: props.location,\r\n            showDistance: false\r\n        }\r\n\r\n        this.returnGuessToApp = props.returnGuessToApp\r\n    }\r\n\r\n    componentWillMount() {\r\n        // console.log('A')\r\n    }\r\n\r\n    componentDidMount() {\r\n        // console.log('B')\r\n    }\r\n\r\n    componentWillUpdate() {\r\n        // console.log('C')\r\n    }\r\n\r\n    componentDidUpdate() {\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.location !== this.state.location) {\r\n            this.setState({\r\n                location: nextProps.location,\r\n                correct: null,\r\n                distance: 0,\r\n                selected: false\r\n            });\r\n        }\r\n    }\r\n\r\n    onClick = () => {\r\n        if (this.props.type === 'answer') {\r\n            this.setState(prevState => ({\r\n                selected: !prevState.selected\r\n            }))\r\n\r\n            this.returnGuessToApp(this)\r\n        }\r\n    }\r\n\r\n    getAnswerStatusClass() {\r\n        let className = 'location'\r\n        className += (this.state.correct) ? ' is-correct' : ''\r\n        className += (this.state.correct === false) ? ' is-wrong' : ''\r\n        className += (this.state.selected) ? ' is-selected' : ''\r\n        return className\r\n    }\r\n\r\n    renderDistance() {\r\n        if (this.props.showDistance) {\r\n            let dist = (this.props.distanceDisplayType === 'km' ? numberWithCommas(this.props.distance) + ' km' : numberWithCommas(kmToMiles(this.props.distance)) + ' miles')\r\n            return (\r\n                <span className=\"location__dist\">{dist}</span>\r\n            )\r\n        }\r\n    }\r\n\r\n    getFlagURL() {\r\n        let flagString = null;\r\n        try {\r\n            flagString = `${require('svg-country-flags/svg/' + this.props.location.countryCode.toLowerCase() + '.svg')}`\r\n            return flagString\r\n        } catch(e) {\r\n            return flagString = `fallback.svg`\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { capital, countryName, countryCode } = this.props.location\r\n        return (\r\n            <div className={this.getAnswerStatusClass()} onClick={this.onClick}>\r\n                {this.props.showFlags && <img className=\"location__flag\" src={this.getFlagURL()} alt={countryCode && \" Flag\"} />}\r\n                <h3 className=\"location__title\">{capital} {this.renderDistance() }</h3>\r\n                <span className=\"location__country\">{countryName}</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Location\r\n","import React, { Component } from 'react'\r\nimport './Scoreboard.scss'\r\n\r\nclass Scoreboard extends Component {\r\n    render() {\r\n        const { correct, wrong } = this.props\r\n\r\n        return (\r\n            <div className=\"scoreboard\">\r\n                <div className=\"container\">\r\n                    <div className=\"score correct\">\r\n                        <span className=\"figure\">{correct}</span>\r\n                    </div>\r\n\r\n                    <div className=\"score wrong\">\r\n                        <span className=\"figure\">{wrong}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Scoreboard\r\n","import React, { Component } from 'react'\r\nimport './MainMenu.scss'\r\nimport { Toggle, Dropdown } from '../../components'\r\n\r\nclass MainMenu extends Component {\r\n\r\n    // Diffferent menus\r\n    // Game - WHere you are asked questions\r\n    // Splash - Splash menu\r\n    // Settings - WHere you can control settings\r\n    // GameOver - Where end results are shown\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            currentMenu: this.props.menu,\r\n            distanceDisplayType: this.props.distanceDisplayType,\r\n            showFlags: this.props.showFlags,\r\n            activeRegion: this.props.activeRegion || this.props.regions[0] || 0\r\n        }\r\n    }\r\n\r\n    changeMenu(type) {\r\n        this.setState({ currentMenu: type })\r\n        this.props.onMenuChange(type)\r\n    }\r\n\r\n    saveSettings() {\r\n        this.props.onSaveSettings(this.state)\r\n    }\r\n\r\n    handleDistanceType(val) {\r\n        this.setState({ distanceDisplayType: val ? 'km' : 'miles' })\r\n    }\r\n\r\n    handleFlagToggle(showFlags) {\r\n        this.setState({ showFlags })\r\n    }\r\n\r\n    handleRegionChange(activeRegion) {\r\n        this.setState({ activeRegion })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.currentMenu === 'game') {\r\n            return (null)\r\n        } else if (this.state.currentMenu === 'splash') {\r\n            return (\r\n                <div className=\"menu menu--splash\">\r\n                    <h1>Country Distance</h1>\r\n                    <button className=\"btn\" onClick={() => this.changeMenu('game')}>Play Game</button>\r\n                    <button className=\"btn\" onClick={() => this.changeMenu('settings')}>Settings</button>\r\n                </div>\r\n            )\r\n        } else if (this.state.currentMenu === 'settings') {\r\n            return (\r\n                <div className=\"menu menu--settings\">\r\n                    <div className=\"container\">\r\n                        <h1>Settings</h1>\r\n\r\n                        <div className=\"form-item\">\r\n                            <Toggle label=\"Distance type\" initial={(this.props.distanceDisplayType === 'km' ? true : false )} onToggle={(val) => { this.handleDistanceType(val) }} activeLabel='Kilometers' inactiveLabel='Miles' />\r\n                        </div>\r\n                        <div className=\"form-item\">\r\n                            <Toggle label=\"Show Flags\" initial={this.props.showFlags} onToggle={(val) => { this.handleFlagToggle(val) }}/>\r\n                        </div>\r\n                        <div className=\"form-item\">\r\n                            <Dropdown label=\"Regions\" onChange={(val) => { this.handleRegionChange(val) }} initial={this.state.activeRegion}  opts={this.props.regions} />\r\n                        </div>\r\n                        <button className=\"btn float-right\" onClick={() => { this.saveSettings(); this.changeMenu('splash')} }>Save Settings</button>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default MainMenu\r\n","import React, { Component } from 'react'\r\n\r\nimport './Timer.scss'\r\n\r\nclass Timer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            duration: parseInt(this.props.duration, 10),\r\n            ticker: parseInt(this.props.duration, 10),\r\n            running: false,\r\n            finished: false,\r\n            ratio: 100,\r\n        }\r\n\r\n        this.timer = null\r\n    }\r\n\r\n    tick = () => {\r\n        if (this.state.running && this.props.menu === 'game') {\r\n            if (this.state.ticker <= 0) {\r\n                this.setState({\r\n                    running: false,\r\n                    finished: true\r\n                })\r\n                clearInterval(this.timer)\r\n                this.onFinish()\r\n            } else {\r\n                this.setState(prevState => ({\r\n                    ticker: prevState.ticker - 1\r\n                }))\r\n            }\r\n\r\n            this.updateProgress()\r\n        }\r\n    }\r\n\r\n    startTimer = () => {\r\n        this.setState({\r\n            running: true,\r\n            finished: false\r\n        })\r\n\r\n        this.timer = setInterval(() => this.tick(), 1000)\r\n    }\r\n\r\n    stopTimer = () => {\r\n        this.setState({ running: false })\r\n        clearInterval(this.timer)\r\n    }\r\n\r\n    resetTimer = () => {\r\n        clearInterval(this.timer)\r\n        this.setState({\r\n            ticker: this.state.duration,\r\n            running: false,\r\n            finished: false,\r\n            ratio: 100\r\n        })\r\n    }\r\n\r\n    onFinish = () => {\r\n        this.props.onFinish()\r\n    }\r\n\r\n    updateProgress = () => {\r\n        let ratio = this.state.ticker / this.state.duration\r\n        this.setState({ progress: ratio * 100 })\r\n    }\r\n\r\n    render() {\r\n        let classes = 'timer'\r\n        classes += (this.state.progress > 20 && this.state.progress < 30) ? ' med' : ''\r\n        classes += (this.state.progress < 20) ? ' low' : ''\r\n\r\n        return (\r\n            <div className={classes}>\r\n                <div className=\"timer__inner\" style={{ width: this.state.progress + '%'}}></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Timer\r\n","import React, { Component } from 'react'\r\nimport './Toggle.scss'\r\n\r\nvar classNames = require('classnames')\r\n\r\nclass Toggle extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            toggle: this.props.initial || false\r\n        }\r\n    }\r\n\r\n    toggle = () => {\r\n        let newVal = !this.state.toggle\r\n        this.setState({ toggle: newVal })\r\n\r\n        if (this.props.onToggle) {\r\n            this.props.onToggle(newVal)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.label && <label className=\"form-item__label\">{this.props.label}</label>}\r\n                <div className=\"form-item__control toggle-wrapper\" onClick={this.toggle}>\r\n                    {this.props.inactiveLabel && <label className=\"toggle-label\">{this.props.inactiveLabel}</label>}\r\n                    <div className={classNames(\"toggle-pill\", {active: this.state.toggle}, {inactive: !this.state.toggle})}>\r\n                        <div className=\"toggle-pill__inner\"></div>\r\n                    </div>\r\n                    {this.props.activeLabel && <label className=\"toggle-label\">{this.props.activeLabel}</label>}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Toggle\r\n","import React, { Component } from 'react'\r\nimport './Dropdown.scss'\r\n\r\nclass Dropdown extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            selected: this.props.initial || this.props.opts[0]\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({ selected: e.target.value })\r\n\r\n        if (this.props.onChange) {\r\n            this.props.onChange( e.target.value)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {this.props.label && <label className=\"form-item__label\">{this.props.label}</label>}\r\n                <div className=\"form-item__control dropdown\">\r\n                    <select onChange={this.handleChange} defaultValue={this.props.initial}>\r\n                        {this.props.opts.map( (item) =>\r\n                            <option key={item} value={item}>{item}</option>\r\n                        )}\r\n                    </select>\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Dropdown\r\n","import React, { Component } from 'react';\r\n\r\nimport './custom.scss';\r\n\r\nimport { locationData, regions } from './lib/locationData.js'\r\nimport { distanceBetween, randomBetween } from './lib/helpers'\r\n\r\nimport { Location, Scoreboard, MainMenu, Timer } from './components'\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n\r\n        this.state =  {\r\n            correct: null,\r\n            correctAnswers: 0,\r\n            wrongAnswers: 0,\r\n            totalAnswers: 0,\r\n            timeUp: false,\r\n            menu: 'splash',\r\n            distanceDisplayType: 'miles',\r\n            showFlags: true,\r\n            activeRegion: regions[0],\r\n            answerHasBeenSelected: false\r\n        }\r\n\r\n        this.regionCache = []\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.nextGame()\r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState) {\r\n        // Check to see whether the game is starting\r\n        if (nextState.menu !== this.state.menu && nextState.menu === 'game') {\r\n            this.startGame()\r\n        }\r\n    }\r\n\r\n    startGame() {\r\n        this.nextGame()\r\n        setTimeout(() => {\r\n            this._childTimer.resetTimer()\r\n            this._childTimer.startTimer()\r\n        }, 10)\r\n    }\r\n\r\n    nextGame = () => {\r\n        // Get new center location, and two random locations\r\n        let locationStart = this.getRandomLocation();\r\n        let locationA = this.getRandomLocation();\r\n        let locationB = this.getRandomLocation();\r\n\r\n        // Really don't like how this works but it greatly reduces risk of having two the same\r\n        while (locationStart === locationA) {\r\n            locationA = this.getRandomLocation()\r\n        }\r\n\r\n        while (locationA === locationB) {\r\n            locationB = this.getRandomLocation()\r\n        }\r\n\r\n        while (locationB === locationStart) {\r\n            locationStart = this.getRandomLocation()\r\n        }\r\n\r\n        this.setState({\r\n            start: {\r\n                location: locationStart,\r\n                selected: false,\r\n                correct: null,\r\n                distance: 0,\r\n            },\r\n            answerA: {\r\n                location: locationA,\r\n                selected: false,\r\n                correct: null,\r\n                distance: distanceBetween(locationStart, locationA),\r\n                showDistance: false,\r\n            },\r\n            answerB: {\r\n                location: locationB,\r\n                selected: false,\r\n                correct: null,\r\n                distance: distanceBetween(locationStart, locationB),\r\n                showDistance: false,\r\n            },\r\n            answerHasBeenSelected: false,\r\n            timeUp: false,\r\n        })\r\n    }\r\n\r\n    getRandomLocation() {\r\n        if (this.state.activeRegion === 'All') {\r\n            return locationData[randomBetween(0, locationData.length)];\r\n        } else {\r\n\r\n            // Check to see if we have already filtered regions previously.\r\n            if (typeof this.regionCache[this.state.activeRegion] !== 'undefined' && this.regionCache[this.state.activeRegion].length > 0) {\r\n                const index = randomBetween(0, this.regionCache[this.state.activeRegion].length)\r\n                return this.regionCache[this.state.activeRegion][index]\r\n            } else {\r\n                // Loop through the regions and return those that are relevant to the active region\r\n                const filteredLocations = locationData.filter(item => item.continent === this.state.activeRegion)\r\n\r\n                // Store the newly filtered regions in the cache\r\n                this.regionCache[this.state.activeRegion] = filteredLocations\r\n\r\n                // Return a random item\r\n                return filteredLocations[randomBetween(0, filteredLocations.length)];\r\n            }\r\n        }\r\n    }\r\n\r\n    getSelectedAnswer(a, b) {\r\n        return a.selected ? a : b\r\n    }\r\n\r\n    updateAppState = guess => {\r\n        if (!this.state.answerHasBeenSelected && !this.state.timeUp) {\r\n            this.setState({answerHasBeenSelected: true})\r\n            this.checkAnswer(guess)\r\n        }\r\n    }\r\n\r\n    checkAnswer(guess) {\r\n        let correctAnswer = null\r\n\r\n        let { answerA, answerB } = this.state\r\n\r\n        if (answerA.distance < answerB.distance) correctAnswer = answerA\r\n        else correctAnswer = answerB\r\n\r\n        answerA.showDistance = true\r\n        answerB.showDistance = true\r\n\r\n        if (correctAnswer.location === guess.state.location) { // Correct\r\n            guess.setState({ correct: true })\r\n\r\n            this.setState(prevState => ({\r\n                correct: true,\r\n                totalAnswers: prevState.totalAnswers + 1,\r\n                correctAnswers: prevState.correctAnswers + 1,\r\n                answerA,\r\n                answerB\r\n            }))\r\n        } else {\r\n            guess.setState({ correct: false })\r\n\r\n            this.setState(prevState => ({\r\n                correct: false,\r\n                totalAnswers: prevState.totalAnswers + 1,\r\n                wrongAnswers: prevState.wrongAnswers + 1,\r\n                answerA,\r\n                answerB\r\n            }))\r\n        }\r\n\r\n        this._childTimer.stopTimer()\r\n    }\r\n\r\n    onTimerFinish() {\r\n        this.setState({ timeUp: true })\r\n    }\r\n\r\n    handleSaveSettings(newState) {\r\n        this.setState({\r\n            distanceDisplayType: newState.distanceDisplayType,\r\n            showFlags: newState.showFlags,\r\n            activeRegion: newState.activeRegion\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { totalAnswers, correctAnswers, wrongAnswers, start, answerA, answerB } = this.state\r\n        const containerStyle = {\r\n            maxWidth: '700px',\r\n            margin: '0 auto',\r\n            padding: '0 15px'\r\n        }\r\n\r\n        if (this.state.menu === 'splash') {\r\n            return (\r\n                <React.Fragment>\r\n                    <MainMenu menu={this.state.menu}  activeRegion={this.state.activeRegion} regions={regions} showFlags={this.state.showFlags} onSaveSettings={(s) => { this.handleSaveSettings(s) }} onMenuChange={(menu) => { this.setState({menu}) }} />\r\n                </React.Fragment>\r\n            )\r\n        } else if (this.state.menu === 'settings') {\r\n            return (\r\n                <MainMenu menu={this.state.menu} activeRegion={this.state.activeRegion} regions={regions} showFlags={this.state.showFlags} onSaveSettings={(s) => { this.handleSaveSettings(s) }} onMenuChange={(menu) => { this.setState({menu}) }} />\r\n            )\r\n        } else if (this.state.menu === 'game') {\r\n            const { menu, showFlags, distanceDisplayType } = this.state\r\n            return (\r\n                <React.Fragment>\r\n                    <MainMenu menu={menu} activeRegion={this.state.activeRegion} regions={regions} showFlags={showFlags} distanceDisplayType={distanceDisplayType} onSaveSettings={(s) => { this.handleSaveSettings(s) }} onMenuChange={(menu) => { this.setState({menu}) }} />\r\n                    <Scoreboard total={totalAnswers} correct={correctAnswers} wrong={wrongAnswers} />\r\n                    <div className=\"question__wrapper\">\r\n                        <div className=\"container\">\r\n                            <Location location={start.location} showFlags={showFlags} distanceDisplayType={distanceDisplayType} data={start.data} type=\"question\" />\r\n                            <Timer duration=\"10\" menu={menu} ref={(child) => { this._childTimer = child }} onFinish={() => { this.onTimerFinish() }} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"container\" style={containerStyle}>\r\n                        <h2 className=\"question__heading\">Which is closer?</h2>\r\n                        <Location location={answerA.location} showFlags={showFlags} showDistance={answerA.showDistance} distanceDisplayType={distanceDisplayType} distance={answerA.distance} returnGuessToApp={value => this.updateAppState(value) } type=\"answer\" />\r\n                        <Location location={answerB.location} showFlags={showFlags} showDistance={answerB.showDistance} distanceDisplayType={distanceDisplayType} distance={answerB.distance} returnGuessToApp={value => this.updateAppState(value) } type=\"answer\" />\r\n                        {(this.state.answerHasBeenSelected || this.state.timeUp) &&\r\n                            <button type=\"button\" className=\"btn float-right mb-3\" onClick={() => { setTimeout(() => {\r\n                            this._childTimer.resetTimer()\r\n                            this._childTimer.startTimer()\r\n                        }, 10); this.nextGame() }}>Next Round</button>\r\n                    }\r\n                    </div>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}